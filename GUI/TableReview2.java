/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.ConnectionBuilder;

/**
 *
 * @author peemtnp
 */
public class TableReview2 extends javax.swing.JFrame {

    private DefaultTableModel modeltable;
    DefaultTableModel model = new DefaultTableModel();
    Object[] data = new Object[0];
    TableRowSorter<DefaultTableModel> sorter;

    public TableReview2() {
        initComponents();
        model = (DefaultTableModel) tableReview.getModel();
        sorter = new TableRowSorter<>(model);
        tableReview.setRowSorter(sorter);
        tableReview.setRowHeight(45);
        showDataReviewRecord();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tableReview = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableReview.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tableReview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Topic", "Review", "Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableReview);
        if (tableReview.getColumnModel().getColumnCount() > 0) {
            tableReview.getColumnModel().getColumn(0).setMinWidth(230);
            tableReview.getColumnModel().getColumn(0).setPreferredWidth(230);
            tableReview.getColumnModel().getColumn(0).setMaxWidth(230);
            tableReview.getColumnModel().getColumn(2).setMinWidth(65);
            tableReview.getColumnModel().getColumn(2).setPreferredWidth(65);
            tableReview.getColumnModel().getColumn(2).setMaxWidth(65);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 962, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 938, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableReview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableReview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableReview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableReview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableReview2().setVisible(true);
            }
        });
    }

    public void showDataReviewRecord() {
        clearTableRows();
        String sql = "SELECT topicreview,contentreview,(taste+clean+service+look+worth)/5 AS AVG_Score FROM Review";
//                        "FROM Review\n" +
//                        "WHERE res_id=?;";
        try {
            Connection conn = ConnectionBuilder.getConnection();
            ResultSet rs = conn.createStatement().executeQuery(sql);
            System.out.println(rs);
//            System.out.println("id: "+rs.getInt(1));
            int row = 0;
            while (rs.next()) {
                model.addRow(data);
                model.setValueAt(rs.getString(1), row, 0);
                model.setValueAt(rs.getString(2), row, 1);
                model.setValueAt(rs.getDouble(3), row, 2);

                row++;
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
//        tbProduct.setFillsViewportHeight(true);
    }

    public void clearTableRows() {
        int row = model.getRowCount() - 1;
        while (row > -1) {
            model.removeRow(row--);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableReview;
    // End of variables declaration//GEN-END:variables
}
